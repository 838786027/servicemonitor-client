/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.gosun.servicemonitor.rpc;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Heartbeat extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Heartbeat\",\"namespace\":\"com.gosun.servicemonitor.rpc\",\"fields\":[{\"name\":\"extraMsg\",\"type\":\"string\"},{\"name\":\"nodeId\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence extraMsg;
  @Deprecated public java.lang.CharSequence nodeId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Heartbeat() {}

  /**
   * All-args constructor.
   */
  public Heartbeat(java.lang.CharSequence extraMsg, java.lang.CharSequence nodeId) {
    this.extraMsg = extraMsg;
    this.nodeId = nodeId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return extraMsg;
    case 1: return nodeId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: extraMsg = (java.lang.CharSequence)value$; break;
    case 1: nodeId = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'extraMsg' field.
   */
  public java.lang.CharSequence getExtraMsg() {
    return extraMsg;
  }

  /**
   * Sets the value of the 'extraMsg' field.
   * @param value the value to set.
   */
  public void setExtraMsg(java.lang.CharSequence value) {
    this.extraMsg = value;
  }

  /**
   * Gets the value of the 'nodeId' field.
   */
  public java.lang.CharSequence getNodeId() {
    return nodeId;
  }

  /**
   * Sets the value of the 'nodeId' field.
   * @param value the value to set.
   */
  public void setNodeId(java.lang.CharSequence value) {
    this.nodeId = value;
  }

  /** Creates a new Heartbeat RecordBuilder */
  public static com.gosun.servicemonitor.rpc.Heartbeat.Builder newBuilder() {
    return new com.gosun.servicemonitor.rpc.Heartbeat.Builder();
  }
  
  /** Creates a new Heartbeat RecordBuilder by copying an existing Builder */
  public static com.gosun.servicemonitor.rpc.Heartbeat.Builder newBuilder(com.gosun.servicemonitor.rpc.Heartbeat.Builder other) {
    return new com.gosun.servicemonitor.rpc.Heartbeat.Builder(other);
  }
  
  /** Creates a new Heartbeat RecordBuilder by copying an existing Heartbeat instance */
  public static com.gosun.servicemonitor.rpc.Heartbeat.Builder newBuilder(com.gosun.servicemonitor.rpc.Heartbeat other) {
    return new com.gosun.servicemonitor.rpc.Heartbeat.Builder(other);
  }
  
  /**
   * RecordBuilder for Heartbeat instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Heartbeat>
    implements org.apache.avro.data.RecordBuilder<Heartbeat> {

    private java.lang.CharSequence extraMsg;
    private java.lang.CharSequence nodeId;

    /** Creates a new Builder */
    private Builder() {
      super(com.gosun.servicemonitor.rpc.Heartbeat.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.gosun.servicemonitor.rpc.Heartbeat.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.extraMsg)) {
        this.extraMsg = data().deepCopy(fields()[0].schema(), other.extraMsg);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nodeId)) {
        this.nodeId = data().deepCopy(fields()[1].schema(), other.nodeId);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Heartbeat instance */
    private Builder(com.gosun.servicemonitor.rpc.Heartbeat other) {
            super(com.gosun.servicemonitor.rpc.Heartbeat.SCHEMA$);
      if (isValidValue(fields()[0], other.extraMsg)) {
        this.extraMsg = data().deepCopy(fields()[0].schema(), other.extraMsg);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nodeId)) {
        this.nodeId = data().deepCopy(fields()[1].schema(), other.nodeId);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'extraMsg' field */
    public java.lang.CharSequence getExtraMsg() {
      return extraMsg;
    }
    
    /** Sets the value of the 'extraMsg' field */
    public com.gosun.servicemonitor.rpc.Heartbeat.Builder setExtraMsg(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.extraMsg = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'extraMsg' field has been set */
    public boolean hasExtraMsg() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'extraMsg' field */
    public com.gosun.servicemonitor.rpc.Heartbeat.Builder clearExtraMsg() {
      extraMsg = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'nodeId' field */
    public java.lang.CharSequence getNodeId() {
      return nodeId;
    }
    
    /** Sets the value of the 'nodeId' field */
    public com.gosun.servicemonitor.rpc.Heartbeat.Builder setNodeId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.nodeId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'nodeId' field has been set */
    public boolean hasNodeId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'nodeId' field */
    public com.gosun.servicemonitor.rpc.Heartbeat.Builder clearNodeId() {
      nodeId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Heartbeat build() {
      try {
        Heartbeat record = new Heartbeat();
        record.extraMsg = fieldSetFlags()[0] ? this.extraMsg : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.nodeId = fieldSetFlags()[1] ? this.nodeId : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
